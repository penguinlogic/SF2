function Z = DWCT8(X)

% set the parameters
k = 0.8; delta = 4.5;
N = 8;
stp = 23;
rise = 1*stp;


% form the equal MSE step sizes
steps = DWT_steps(levels,k)*delta;

% set first rise for quantisation
rise = steps*2;

% perform the iterative DWT
Y = DWT_iter(X,levels);

% quantise the image (Yq) and get entropy and bit rate information
%[Yq entropy_array total_bits] = DWT_quantise(Y,levels,steps,rise);


















% correct basic concept but done wrong
Z = DWTgrp(X,1);
Z(129:256,129:256) = 0;
Z(1:128,1:128) = DCT8(Z(1:128,1:128));








% uncomment to output entropy and bit rate information
compression_ratio = 2.2812e5 / total_bits

% uncomment to output rms error
error = std(X(:) - Z(:))

end